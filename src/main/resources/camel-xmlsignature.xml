<?xml version="1.0" encoding="UTF-8"?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements. See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership. The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance
 with the License. You may obtain a copy of the License at
 
 http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied. See the License for the
 specific language governing permissions and limitations
 under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:camel="http://camel.apache.org/schema/spring"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">
    <camel:keyStoreParameters id="signatureParams"
        password="{{client.store.password}}" resource="./clientstore.jks"/>
    <camel:keyStoreParameters id="verificationParams"
        password="{{service.store.password}}" resource="./servicestore.jks"/>
    <bean
        class="org.apache.camel.component.jasypt.JasyptPropertiesParser" id="jasypt">
        <!-- password is mandatory, you can prefix it with sysenv: or sys: to indicate it should use
         an OS environment or JVM system property value, so you dont have the master password defined here -->
        <property name="password" value="master-secret"/>
    </bean>
    <bean
        class="org.apache.camel.component.xmlsecurity.api.DefaultKeyAccessor" id="signatureAccessor">
        <property name="alias" value="myclientkey"/>
        <property name="password" value="{{client.key.password}}"/>
        <property name="keyStoreParameters" ref="signatureParams"/>
    </bean>
    <bean
        class="org.apache.camel.component.xmlsecurity.api.DefaultKeySelector" id="verificationSelector">
        <property name="alias" value="myclientkey"/>
        <property name="keyStoreParameters" ref="verificationParams"/>
    </bean>
    <camelContext id="camelContext-a5151b76-4d6f-4556-96ad-d6be7677e8d1" xmlns="http://camel.apache.org/schema/spring">
        <!-- define the camel properties placeholder, and let it leverage jasypt -->
        <propertyPlaceholder id="properties"
            location="classpath:passwords.properties" propertiesParserRef="jasypt"/>
        <route id="_route9">
            <from id="_from1" uri="file:src/main/resources/data?noop=true"/>
            <to id="_to1" uri="xmlsecurity:sign://enveloped?keyAccessor=#signatureAccessor&amp;parentLocalName=PaymentInfo&amp;parentNamespace=urn:example:po"/>
            <to id="_to2" uri="file:target/signed-data?fileName=${file:name}.signed"/>
        </route>
        <route id="_route10">
            <from id="_from2" uri="file:target/signed-data?noop=true"/>
            <to id="_to3" uri="xmlsecurity:verify://enveloped?keySelector=#verificationSelector"/>
            <to id="_to4" uri="file:target/verified-data?fileName=${file:name.noext}.verified"/>
        </route>
    </camelContext>
</beans>
